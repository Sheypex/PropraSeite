{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "",
  "sources": [
    "index.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA;;EAAA,OAAA,GAAU,OAAA,CAAQ,SAAR;;EACV,KAAA,GAAQ,OAAA,CAAQ,WAAR;;EACR,GAAA,GAAM,OAAA,CAAA;;EACN,IAAA,GAAO;;EAEP,GAAG,CAAC,GAAJ,CAAQ,OAAO,CAAC,MAAR,CAAe,QAAf,CAAR;;EACA,GAAG,CAAC,GAAJ,CAAQ,OAAO,CAAC,IAAR,CAAA,CAAR;;EAEA,GAAG,CAAC,MAAJ,CAAW,IAAX,EAAiB,QAAA,CAAA,CAAA;WACf,OAAO,CAAC,GAAR,CAAY,CAAA,kBAAA,CAAA,CAAqB,IAArB,CAAA,CAAZ;EADe,CAAjB;;EAGA,GAAG,CAAC,IAAJ,CAAS,QAAT,EAAmB,QAAA,CAAC,GAAD,EAAM,GAAN,CAAA;AACjB,QAAA,OAAA,EAAA,MAAA,EAAA;IAAA,KAAA,GAAQ,OAAA,CAAQ,eAAR,CAAwB,CAAC;IACjC,OAAA,GAAU,KAAA,CAAM,QAAN,EAAgB;MAAC,WAAD;MACxB,GAAG,CAAC,KAAK,CAAC,MADc;MAExB,GAFwB;MAGxB,OAHwB;MAIxB,GAAG,CAAC,KAAK,CAAC,KAJc;KAAhB;IAOV,MAAA,GAAS;IACT,OAAO,CAAC,MAAM,CAAC,EAAf,CAAkB,MAAlB,EAA0B,QAAA,CAAC,IAAD,CAAA;aACxB,MAAA,IAAU,IAAI,CAAC,QAAL,CAAA;IADc,CAA1B;WAGA,OAAO,CAAC,MAAM,CAAC,EAAf,CAAkB,KAAlB,EAAyB,QAAA,CAAA,CAAA;MACvB,OAAO,CAAC,GAAR,CAAY,CAAA,mBAAA,CAAA,CAAsB,MAAtB,CAAA,CAAZ;aACA,GAAG,CAAC,IAAJ,CAAS,MAAT;IAFuB,CAAzB;EAbiB,CAAnB;;EAmBA,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,QAAA,CAAC,GAAD,EAAM,GAAN,CAAA;AACf,QAAA,OAAA,EAAA,MAAA,EAAA;IAAA,KAAA,GAAQ,OAAA,CAAQ,eAAR,CAAwB,CAAC;IACjC,OAAA,GAAU,KAAA,CAAM,QAAN,EAAgB;MAAC,WAAD;MACxB,GAAG,CAAC,KAAK,CAAC,MADc;MAExB,GAFwB;MAGxB,OAHwB;KAAhB;IAMV,MAAA,GAAS;IACT,OAAO,CAAC,MAAM,CAAC,EAAf,CAAkB,MAAlB,EAA0B,QAAA,CAAC,IAAD,CAAA;aACxB,MAAA,IAAU,IAAI,CAAC,QAAL,CAAA;IADc,CAA1B;WAGA,OAAO,CAAC,MAAM,CAAC,EAAf,CAAkB,KAAlB,EAAyB,QAAA,CAAA,CAAA;MACvB,OAAO,CAAC,GAAR,CAAY,CAAA,aAAA,CAAA,CAAgB,MAAhB,CAAA,CAAZ;aACA,GAAG,CAAC,IAAJ,CAAS,MAAT;IAFuB,CAAzB;EAZe,CAAjB;;EAkBA,IAAA,GAAO,QAAA,CAAA,CAAA;AACL,QAAA,MAAA,EAAA;IAAA,MAAA,GAAS;IACT,MAAA,GAAS,KAAA,CAAM;MACb,SAAA,EAAW;IADE,CAAN;IAGT,MAAM,CAAC,EAAP,CAAU,UAAV,EAAsB,QAAA,CAAA,CAAA;AACpB,UAAA,MAAA,EAAA;MAAA,MAAA,GAAS;AACT;aAAM,CAAC,MAAA,GAAS,MAAM,CAAC,IAAP,CAAA,CAAV,CAAN;qBACE,MAAM,CAAC,IAAP,CAAY,MAAZ;MADF,CAAA;;IAFoB,CAAtB;IAKA,MAAM,CAAC,EAAP,CAAU,OAAV,EAAmB,QAAA,CAAC,GAAD,CAAA;aACjB,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;IADiB,CAAnB;IAGA,MAAM,CAAC,EAAP,CAAU,KAAV,EAAiB,QAAA,CAAA,CAAA;aAAI,CAAA;IAAJ,CAAjB;IAEA,MAAM,CAAC,KAAP,CAAa,mCAAb;IACA,MAAM,CAAC,KAAP,CAAa,gDAAb;IACA,MAAM,CAAC,GAAP,CAAA;WACA,OAAO,CAAC,GAAR,CAAY,MAAZ;EAlBK;;EAmBP,IAAA,CAAA;AAnEA",
  "sourcesContent": [
    "express = require \"express\"\r\nparse = require \"csv-parse\"\r\napp = express()\r\nport = 8080\r\n\r\napp.use express.static \"../app\"\r\napp.use express.json()\r\n\r\napp.listen port, () ->\r\n  console.log \"Listening on port #{port}\"\r\n\r\napp.post(\"/email\", (req, res) ->\r\n  spawn = require('child_process').spawn\r\n  process = spawn('python', ['./main.py',\r\n    req.query.search, # pass data from\r\n    \"2\",\r\n    \"Data/\",\r\n    req.query.email\r\n  ]) # GET method. Example: .../email?search=trump&type=1\r\n\r\n  result = \"\"\r\n  process.stdout.on('data', (data) ->\r\n    result += data.toString()\r\n  )\r\n  process.stdout.on('end', () ->\r\n    console.log \"Email task result: #{result}\"\r\n    res.send(result)\r\n  )\r\n)\r\n\r\napp.get('/test', (req, res)->\r\n  spawn = require('child_process').spawn\r\n  process = spawn('python', ['./main.py',\r\n    req.query.search, # pass data from\r\n    \"1\",\r\n    \"Data/\"\r\n  ]) # GET method. Example: .../test?search=trump&type=1\r\n\r\n  result = \"\"\r\n  process.stdout.on('data', (data) ->\r\n    result += data.toString()\r\n  )\r\n  process.stdout.on('end', () ->\r\n    console.log \"JSON result: #{result}\"\r\n    res.send(result)\r\n  )\r\n)\r\n\r\ntest = () ->\r\n  output = []\r\n  parser = parse({\r\n    delimiter: ':'\r\n  })\r\n  parser.on('readable', ()->\r\n    record = undefined\r\n    while (record = parser.read())\r\n      output.push(record)\r\n  )\r\n  parser.on('error', (err)->\r\n    console.error(err.message)\r\n  )\r\n  parser.on('end', ()->{}\r\n  )\r\n  parser.write(\"root:x:0:0:root:/root:/bin/bash\\n\")\r\n  parser.write(\"someone:x:1022:1022::/home/someone:/bin/bash\\n\")\r\n  parser.end()\r\n  console.log output\r\ntest()\r\n"
  ]
}