{
  "version": 3,
  "file": "homeView.js",
  "sourceRoot": "",
  "sources": [
    "homeView.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "#'use strict'\r\n\r\nangular.module('myApp.homeView', ['ngRoute'])\r\n  .config(['$routeProvider', ($routeProvider) ->\r\n    $routeProvider.when '/', {\r\n      templateUrl: 'homeView/homeView.html',\r\n      controller: 'View1Ctrl'\r\n    }\r\n])\r\n  .controller('View1Ctrl', [() ->\r\n    url = \"http://localhost:8080/test?search=Trump&type=1\"\r\n    fetch(url).then((response) -> response.json())\r\n    .then((result) ->\r\n      console.log('success:', result)\r\n      div = document.getElementById('test')\r\n      div.innerHTML = \"title: #{result.title}<br/>message: #{result.message}\"\r\n    )\r\n    .catch((error) -> console.log('error:', error))\r\n    \r\n    separateData()\r\n  ])\r\n\r\ngetDateFormat= (date) ->\r\n  return date.getFullYear() + \"-\" + checkDateLength(date.getMonth() + 1) + \"-\" + checkDateLength(date.getDate()) + \" \" + checkDateLength(date.getHours()) + \":\" + checkDateLength(date.getMinutes()) + \":\" + checkDateLength(date.getSeconds())\r\n\r\ncheckDateLength=(dateLength) ->\r\n  if (dateLength < 10) then return \"0\" + dateLength\r\n  else return dateLength\r\n\r\nplotTerm=(xData, yData) ->\r\n  trace1 = {\r\n    x: xData,\r\n    y: yData,\r\n    type: 'line',\r\n    name: 'Trump Tweets Loaded'\r\n  }\r\n  layout = {\r\n    title: {},\r\n    xaxis: {\r\n      title: {\r\n        text: 'Dates',\r\n        font: {\r\n          family: 'Courier New, monospace',\r\n          size: 18,\r\n          color: '#7f7f7f'\r\n        }\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Number of Tweets',\r\n        font: {\r\n          family: 'Courier New, monospace',\r\n          size: 18,\r\n          color: '#7f7f7f'\r\n        }\r\n      }\r\n    }\r\n  }\r\n  termData = [trace1]\r\n  Plotly.newPlot('term', termData, layout)\r\n\r\n\r\nplotBubbleChart= (xData, yData, hashtags, size, type) ->\r\n  trace1 = {\r\n    x: xData,\r\n    y: yData,\r\n    text: hashtags,\r\n    mode: 'markers+text',\r\n    textposition: 'center',\r\n    marker: {\r\n      size: size,\r\n    }\r\n  }\r\n  data = [trace1]\r\n  layout = {\r\n    colorway: ['#0497f3', 'rgba(34,28,28,0.82)'],\r\n    showlegend: false,\r\n    font: {\r\n      family: 'Courier New, monospace',\r\n      size: 15,\r\n      color: '#222222'\r\n    },\r\n    xaxis: {\r\n      autorange: true,\r\n      showgrid: false,\r\n      zeroline: false,\r\n      showline: false,\r\n      autotick: false,\r\n      ticks: '',\r\n      showticklabels: false\r\n    },\r\n    yaxis: {\r\n      autorange: true,\r\n      showgrid: false,\r\n      zeroline: true,\r\n      showline: true,\r\n      autotick: true,\r\n      ticks: '',\r\n      showticklabels: true\r\n    }\r\n  }\r\n  Plotly.newPlot(type, data, layout)\r\n\r\nloadData= ()->\r\n# TODO: This should be loaded from the node.js server\r\n  jsonString = \"{\\\"result\\\":{\\\"term\\\":{\\\"1558213200000\\\":16896,\\\"1558216800000\\\":1,\\\"1558220400000\\\":0,\\\"1558224000000\\\":0,\\\"1558227600000\\\":1,\\\"1558231200000\\\":0,\\\"1558234800000\\\":0,\\\"1558238400000\\\":0,\\\"1558242000000\\\":0,\\\"1558245600000\\\":0,\\\"1558249200000\\\":0,\\\"1558252800000\\\":0,\\\"1558256400000\\\":0,\\\"1558260000000\\\":0,\\\"1558263600000\\\":193},\\\"counted\\\":[[\\\"#BREAKING\\\",5],[\\\"#moms\\\",6],[\\\"#EEUU\\\",6],[\\\"#toddlers\\\",6],[\\\"#MAGAmemes\\\",7],[\\\"#maga\\\",7],[\\\"#WAKEUPAMERICA\\\",8],[\\\"#RT\\\",13],[\\\"#trump\\\",14],[\\\"#FAUXnews\\\",14],[\\\"#ccot\\\",17],[\\\"#tcot\\\",30],[\\\"#kag\\\",33],[\\\"#NATO\\\",35]],\\\"topuser\\\":[[\\\"bettyblack176\\\",11],[\\\"all_sabrina\\\",11],[\\\"MaryFabulous3\\\",11],[\\\"lpbrown7\\\",12],[\\\"AmericanMom2\\\",12],[\\\"ProfSchlitzo7\\\",12],[\\\"Pasha_Enrik\\\",12],[\\\"trilingual1946\\\",12],[\\\"FLpalmtree1\\\",12],[\\\"minamoradi2020\\\",12],[\\\"BarleyFields1\\\",12],[\\\"AJHolland01\\\",13],[\\\"sueludad\\\",13],[\\\"spooner_lindsay\\\",13],[\\\"rawlings_cindy\\\",13],[\\\"Sekusa1\\\",13],[\\\"atypicalblonde\\\",14],[\\\"Pissed_Woman\\\",14],[\\\"JeffreyHardin15\\\",14],[\\\"kathy_levy\\\",15],[\\\"primfreak\\\",15],[\\\"gnod111\\\",16],[\\\"SearchingForTr9\\\",16],[\\\"Eyerish13\\\",16],[\\\"GymCoachMac\\\",17]]}}\"\r\n  return JSON.parse(jsonString)\r\n\r\nseparateData= () ->\r\n  data = loadData()\r\n\r\n  # terms Data\r\n  termsData = data.result.term\r\n  xTerm = []\r\n  yTerm = []\r\n  Object.keys(termsData).forEach((key) ->\r\n    xDate = new Date(parseFloat(key))\r\n    xTerm.push(getDateFormat(xDate))\r\n    yTerm.push(termsData[key])\r\n  )\r\n\r\n  # counted Data\r\n  countedData = data.result.counted\r\n  count = 1\r\n  xCounted = []\r\n  yCounted = []\r\n  hashtags = []\r\n  size = []\r\n  Object.keys(countedData).forEach((key) ->\r\n    xCounted.push(count++)\r\n    yCounted.push(countedData[key][1])\r\n    size.push(countedData[key][1] * 4)\r\n    hashtags.push(countedData[key][0])\r\n  )\r\n\r\n  # topUser Data\r\n  topUserData = data.result.topuser\r\n  count = 1\r\n  xTopUser = []\r\n  yTopUser = []\r\n  topUser = []\r\n  size2 = []\r\n  Object.keys(topUserData).forEach((key) ->\r\n    xTopUser.push(count++)\r\n    yTopUser.push(topUserData[key][1])\r\n    size2.push(topUserData[key][1] * 4)\r\n    topUser.push(topUserData[key][0])\r\n  )\r\n\r\n  # plot all the data  and visualize it\r\n  plotTerm(xTerm, yTerm)\r\n  plotBubbleChart(xCounted, yCounted, hashtags, size, \"counted\")\r\n  plotBubbleChart(xTopUser, yTopUser, topUser, size2, \"topuser\")\r\n"
  ]
}